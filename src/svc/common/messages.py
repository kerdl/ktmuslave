from __future__ import annotations
import html
from typing import Any, Optional, TYPE_CHECKING
from src import defs
from src.svc import common
from src.data.settings import Settings
from src.data import zoom, format as fmt
from src.data.schedule import compare
from src.parse.zoom import Key
from src.svc import telegram as tg
from src.svc.common.states import State
from src.svc.common.keyboard import Text


if TYPE_CHECKING:
    from src.data.settings import MODE_LITERAL


DEBUGGING = False


class Builder:
    def __init__(
        self,
        separator: str = "\n\n",
    ) -> None:
        self.separator = separator
        self.components: list[str] = []

    def add(self, text: str) -> Builder:
        if text == "" or text is None:
            return self

        self.components.append(text)
        return self

    def add_if(self, text: str, condition: bool):
        if condition:
            self.add(text)

        return self

    def make(self) -> str:
        return self.separator.join(self.components)


#### Common footers and headers ####

def default_footer_addition(everything: common.CommonEverything):
    """
    # Notice about bot mentioning

    ## Why
    - we filter anything that is not for us
    - so we should ask user to reply
    or mention the bot
    """
    mention = ""
    footer_addition = ""

    if everything.is_group_chat:
        if everything.is_from_vk:
            mention = defs.vk_bot_mention
            footer_addition = format_mention_me(mention)

        elif everything.is_from_tg:
            footer_addition = format_reply_to_me()

    return footer_addition

MSG_DEBUG = (
    "8==oü§Æ trace:\n"
    "{trace}\n"
    "8==oü§Æ back_trace:\n"
    "{back_trace}"
)
def format_debug(
    trace: list[State],
    back_trace: list[State],
    last_bot_message: common.CommonBotMessage,
    settings: Settings
):
    def fmt_trace(trace: list[State]):
        return "\n".join([f"‚ÄÄ‚ÄÄ‚ÄÄ{state.space}:{state.anchor}" for state in trace])

    trace_str = fmt_trace(trace)
    back_trace_str = fmt_trace(back_trace)

    return MSG_DEBUG.format(
        trace=trace_str,
        back_trace=back_trace_str,
    )


MSG_CANT_PRESS_OLD_BUTTONS = (
    "–í–æ—Ç —Ç–µ–±–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, "
    "—Ç—ã–∫–∞–π –Ω–∞ –Ω—ë–º"
)
def format_cant_press_old_buttons():
    return MSG_CANT_PRESS_OLD_BUTTONS

MSG_SENT_AS_NEW_MESSAGE = (
    "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"
)
def format_sent_as_new_message():
    return MSG_SENT_AS_NEW_MESSAGE
    

MSG_EMPTY_PAGE = (
    "ü§î | –ü—É—Å—Ç–æ. –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ."
)
def format_empty_page():
    return MSG_EMPTY_PAGE


MSG_PRESS_BEGIN = (
    f"üëá –ù–∞–∂–∏–º–∞–π {Text.BEGIN}"
)
def format_press_begin():
    return MSG_PRESS_BEGIN


MSG_GROUPS = (
    "üìã | –ì—Ä—É–ø–ø—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:\n"
    "‚ÄÄ‚ÄÄ‚îî {groups}"
)
def format_groups(groups: list[str]):
    groups_str = ", ".join(groups) or "–ø—É—Å—Ç–æ"
    return MSG_GROUPS.format(groups=groups_str)

MSG_TEACHERS = (
    "üìã | –ü—Ä–µ–ø–æ–¥—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:\n"
    "‚ÄÄ‚ÄÄ‚îî {teachers}"
)
def format_teachers(teachers: list[str]):
    teachers_str = ", ".join(teachers) or "–ø—É—Å—Ç–æ"
    return MSG_TEACHERS.format(teachers=teachers_str)


MSG_MENTION_ME = (
    "–ï—â—ë —É–ø–æ–º—è–Ω–∏ –º–µ–Ω—è: {mention}, –∏–Ω–∞—á–µ –Ω–µ —É–≤–∏–∂—É"
)
def format_mention_me(mention: str):
    return MSG_MENTION_ME.format(mention=mention)


MSG_REPLY_TO_ME = (
    "–ï—â—ë ‚Ü©Ô∏è –æ—Ç–≤–µ—Ç—å ‚Ü©Ô∏è –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–Ω–∞—á–µ –Ω–µ —É–≤–∏–∂—É"
)
def format_reply_to_me():
    return MSG_REPLY_TO_ME


MSG_CHAT_WILL_MIGRATE = (
    "ü§î –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ, —ç—Ç–∞ –≥—Ä—É–ø–ø–∞ —Å—Ç–∞–Ω–µ—Ç —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–æ–π\n"
    "–ß–∏—Ç–∞–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å: https://teleme.io/articles/turn_a_telegram_group_into_a_supergroup?hl=ru"
)
def format_chat_will_migrate():
    return MSG_CHAT_WILL_MIGRATE


MSG_PAGE_NUM = (
    "üìÑ | –°—Ç—Ä–∞–Ω–∏—Ü–∞ {current}/{last}"
)
def format_page_num(current: int, last: int):
    return MSG_PAGE_NUM.format(current=current, last=last)


MSG_PRESS_BUTTONS_TO_CHANGE = (
    "üëá | –ù–∞–∂–º–∏ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä, —á—Ç–æ–±—ã –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å"
)
def format_press_buttons_to_change():
    return MSG_PRESS_BUTTONS_TO_CHANGE


MSG_NO_TEXT = (
    "‚ùå | –¢—É—Ç –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞"
)
def format_no_text():
    return MSG_NO_TEXT


MSG_CURRENT_VALUE = (
    "üìù | –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {value}"
)
def format_current_value(value: Any):
    return MSG_CURRENT_VALUE.format(
        value = fmt.value_repr(value)
    )


MSG_CANT_CONNECT_TO_SCHEDULE_SERVER = (
    "ü§î | –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
)
def format_cant_connect_to_schedule_server() -> str:
    return MSG_CANT_CONNECT_TO_SCHEDULE_SERVER


MSG_SCHEDULE_UNAVAILABLE = (
    "ü§î | –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
)
def format_schedule_unavailable() -> str:
    return MSG_SCHEDULE_UNAVAILABLE


#### Full messages for specific states ####

MSG_WELCOME =  (
    "üë®üèø –ë—É–¥—É –ø–∏–∑–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ "
    "—Å ktmu-sutd.ru "
    "–∏ –¥–µ–ª–∏—Ç—å—Å—è —Å {noun}"
)
def format_welcome(is_group_chat: bool):
    if is_group_chat:
        return MSG_WELCOME.format(noun="–≤–∞–º–∏")
    else:
        return MSG_WELCOME.format(noun="—Ç–æ–±–æ–π")

MSG_CHOOSE_SCHEDULE_MODE = (
    "‚õìÔ∏è | –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
)
def format_choose_schedule_mode():
    return MSG_CHOOSE_SCHEDULE_MODE

MSG_GROUP_INPUT = (
    "üíÖ | –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É\n"
    "üìå | –§–æ—Ä–º–∞—Ç:\n"
    "‚ÄÄ‚ÄÄ‚îî 1–∫–¥–¥69\n"
    "‚ÄÄ‚ÄÄ‚îî 1-–∫–¥–¥-69\n"
    "‚ÄÄ‚ÄÄ‚îî 1–ö–î–î69\n"
    "‚ÄÄ‚ÄÄ‚îî 1-–ö–î–î-69"
)
def format_group_input():
    return MSG_GROUP_INPUT

MSG_TEACHER_INPUT = (
    "üíÖ | –ù–∞–ø–∏—à–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é\n"
    "üìå | –§–æ—Ä–º–∞—Ç:\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.–î.\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –∂–¥\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑"
)
def format_teacher_input():
    return MSG_TEACHER_INPUT


MSG_UNKNOWN_IDENTIFIER = (
    "‚ùì | {identifier} –ø–æ–∫–∞ –Ω–µ—Ç, –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å?"
)
def format_unknown_identifier(identifier: str):
    return MSG_UNKNOWN_IDENTIFIER.format(identifier=identifier)


MSG_INVALID_GROUP = (
    "‚ùå | –≠—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç:\n"
    "‚ÄÄ‚ÄÄ‚îî 1–∫–¥–¥69\n"
    "‚ÄÄ‚ÄÄ‚îî 1-–∫–¥–¥-69\n"
    "‚ÄÄ‚ÄÄ‚îî 1–ö–î–î69\n"
    "‚ÄÄ‚ÄÄ‚îî 1-–ö–î–î-69\n"
    "üí° | –ù–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É"
)
def format_invalid_group():
    return MSG_INVALID_GROUP


MSG_INVALID_TEACHER = (
    "‚ùå | –≠—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç:\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.–î.\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –∂–¥\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑\n"
    "üí° | –ù–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É"
)
def format_invalid_teacher():
    return MSG_INVALID_TEACHER


MSG_FORBIDDEN_FORMAT_TEACHER = (
    "‚ùå | –ü—Ä–µ–ø–æ–¥–∞ –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è"
    "üí° | –ò—Å–ø–æ–ª—å–∑—É–π:\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.–î.\n"
    "‚ÄÄ‚ÄÄ‚îî –ì–æ–≤–Ω–æ–≤–æ–∑ –∂–¥"
)
def format_forbidden_format_teacher():
    return MSG_FORBIDDEN_FORMAT_TEACHER


MSG_BROADCAST = (
    "üîî | –•–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∑–¥–µ—Å—å —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ–≥–¥–∞ —É –≥—Ä—É–ø–ø—ã –º–µ–Ω—è–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?"
)
def format_broadcast():
    return MSG_BROADCAST


MSG_TCHR_BROADCAST = (
    "üîî | –•–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∑–¥–µ—Å—å —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ–≥–¥–∞ —É –ø—Ä–µ–ø–æ–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?"
)
def format_tchr_broadcast():
    return MSG_TCHR_BROADCAST


MSG_DO_PIN = (
    "üìå | –•–æ—á–µ—à—å —à–æ–± —è –∑–∞–∫—Ä–µ–ø–ª—è–ª —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è?"
)
def format_do_pin():
    return MSG_DO_PIN


MSG_RECOMMEND_PIN = (
    "üìå | –Ø –º–æ–≥—É –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, "
    "–Ω–æ —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤"
)
def format_recommend_pin():
    return MSG_RECOMMEND_PIN


MSG_PERMIT_PIN_VK = (
    "üöΩ | –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞—Ä–∫–µ–ø, –Ω–∞–∑–Ω–∞—á—å –º–µ–Ω—è –∞–¥–º–∏–Ω–æ–º, "
    "–ª–∏–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏ –µ—Å–ª–∏ –ø–æ–µ–±–∞—Ç—å"
)
MSG_PERMIT_PIN_TG = (
    "üöΩ | –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–∫—Ä–µ–ø, –Ω–∞–∑–Ω–∞—á—å –º–µ–Ω—è –∞–¥–º–∏–Ω–æ–º —Å –ø—Ä–∞–≤–æ–º "
    "\"–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\", –ª–∏–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏ –µ—Å–ª–∏ –ø–æ–µ–±–∞—Ç—å"
)
def format_permit_pin(src: common.MESSENGER_OR_EVT_SOURCE):
    if src == common.Source.VK:
        return MSG_PERMIT_PIN_VK
    if src == common.Source.TG:
        return MSG_PERMIT_PIN_TG


MSG_CANT_PIN_VK = (
    "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—å –º–æ—é –∞–¥–º–∏–Ω–∫—É"
)
MSG_CANT_PIN_TG = (
    "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—å –º–æ—ë –ø—Ä–∞–≤–æ \"–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\""
)
def format_cant_pin(src: common.MESSENGER_OR_EVT_SOURCE):
    if src == common.Source.VK:
        return MSG_CANT_PIN_VK
    if src == common.Source.TG:
        return MSG_CANT_PIN_TG


MSG_RECOMMEND_ADDING_ZOOM = (
    "üìù | –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏, ID, –ø–∞—Ä–æ–ª–∏ Zoom –∏ –∑–∞–º–µ—Ç–∫–∏, "
    "—á—Ç–æ–±—ã –æ–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
def format_recommend_adding_zoom():
    return MSG_RECOMMEND_ADDING_ZOOM


MSG_CHOOSE_ADDING_TYPE = (
    "üìù | –í—ã–±–µ—Ä–∏ –∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å/–∑–∞–ø–∏—Å–∏"
)
def format_choose_adding_type():
    return MSG_CHOOSE_ADDING_TYPE


MSG_ZOOM_ADD_FROM_TEXT_EXPLAIN = (
    f"{Text.FROM_TEXT} - –ø–∏—à–µ—à—å –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É, "
    "–∞–≤—Ç–æ–º–∞—Ç–æ–º –±–µ—Ä—ë—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"
)
def format_zoom_add_from_text_explain():
    return MSG_ZOOM_ADD_FROM_TEXT_EXPLAIN


MSG_ZOOM_ADD_MANUALLY_INIT_EXPLAIN = (
    f"{Text.MANUALLY} - –¥–æ–±–∞–≤–ª—è–µ—à—å, –∏–∑–º–µ–Ω—è–µ—à—å, —É–¥–∞–ª—è–µ—à—å "
    "–ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏"
)
def format_zoom_add_manually_init_explain():
    return MSG_ZOOM_ADD_MANUALLY_INIT_EXPLAIN


MSG_ZOOM_ADD_MANUALLY_HUB_EXPLAIN = (
    f"{Text.MANUALLY} - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏–º—è –≤—Ä—É—á–Ω—É—é"
)
def format_zoom_add_manually_hub_explain():
    return MSG_ZOOM_ADD_MANUALLY_HUB_EXPLAIN


MSG_SEND_ZOOM_DATA = (
    "üí¨ | –ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ Zoom –ø–æ —Ñ–æ—Ä–º–∞—Ç—É"
)
def format_send_zoom_data():
    return MSG_SEND_ZOOM_DATA


MSG_ZOOM_DATA_FORMAT = (
    "üìù | –§–æ—Ä–º–∞—Ç:\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.NAME}: <–§–∞–º–∏–ª–∏—è> <–ò>.<–û>.\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.URL}: <–°—Å—ã–ª–∫–∞>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.ID}: <ID>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {'/'.join(Key.PWD)}: <–ö–æ–¥>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.NOTES}: <–õ—é–±–æ–π —Ç–µ–∫—Å—Ç>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ ..."
)
def format_zoom_data_format(do_escape: bool = False):
    text = MSG_ZOOM_DATA_FORMAT
    
    if do_escape:
        return html.escape(text)

    return text


MSG_TCHR_ZOOM_DATA_FORMAT = (
    "üìù | –§–æ—Ä–º–∞—Ç:\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.NAME}: <–ò–º—è –∑–∞–ø–∏—Å–∏>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.URL}: <–°—Å—ã–ª–∫–∞>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.ID}: <ID>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {'/'.join(Key.PWD)}: <–ö–æ–¥>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.HOST_KEY}: <–ö–ª—é—á —Ö–æ—Å—Ç–∞>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ {Key.NOTES}: <–õ—é–±–æ–π —Ç–µ–∫—Å—Ç>\n"
    f"‚ÄÄ‚ÄÄ‚ÄÄ‚Üµ ..."
)
def format_tchr_zoom_data_format(do_escape: bool = False):
    text = MSG_TCHR_ZOOM_DATA_FORMAT
    
    if do_escape:
        return html.escape(text)

    return text


MSG_ZOOM_EXAMPLE = (
    "üîñ | –ù–∞–ø—Ä–∏–º–µ—Ä:\n"
    "<code>"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∏–º—è: –ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.–î.\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ—Å—Å—ã–ª–∫–∞: https://us04web.zoom.us/j/2281337300?pwd=I4mTir3d0fPl4yingWithMyW00d\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ò–¥: 22813376969\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ö–æ–¥: 0oChK0\n"
    "\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∏–º—è: –ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ò–¥: 22813376969\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∑–∞–º–µ—Ç–∫–∏: –≥–æ–≤–Ω–æ–≤–æ–∑ –∂–∏–¥–∫–∏–π –¥—Ä–∏—Å—Ç https://www.nsopw.gov"
    "</code>"
)
def format_zoom_example(do_markup: bool = True):
    text = MSG_ZOOM_EXAMPLE
    
    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_TCHR_ZOOM_EXAMPLE = (
    "üîñ | –ù–∞–ø—Ä–∏–º–µ—Ä:\n"
    "<code>"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∏–º—è: –î–ª—è 1–ö–î–î69\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ—Å—Å—ã–ª–∫–∞: https://us04web.zoom.us/j/2281337300?pwd=I4mTir3d0fPl4yingWithMyW00d\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ò–¥: 22813376969\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ö–æ–¥: 0oChK0\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∫–ª—é—á: mRp3ni5\n"
    "\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ò–º—è: –î–æ–ø. –∑–∞–Ω—è—Ç–∏—è\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–ò–¥: 22813376969\n"
    "‚ÄÄ‚ÄÄ‚ÄÄ–∑–∞–º–µ—Ç–∫–∏: —Ç–æ–ª—å–∫–æ 2–ö–î–î69"
    "</code>"
)
def format_tchr_zoom_example(do_markup: bool = True):
    text = MSG_TCHR_ZOOM_EXAMPLE
    
    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_MASS_ZOOM_DATA_EXPLAIN = (
    "‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Ç–∞–≤—å –ø—Ä–µ—Ñ–∏–∫—Å –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏, —Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ–≤–∞–∂–µ–Ω\n"
    "üí° –ú–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å –≤ —Ä–∞–∑–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è\n"
    "üí° –í –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª–æ–∫–æ–≤, —Å–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä"
)
def format_mass_zoom_data_explain():
    return MSG_MASS_ZOOM_DATA_EXPLAIN


MSG_DOESNT_CONTAIN_ZOOM = (
    f"‚ùå | –ü–æ —Ñ–æ—Ä–º–∞—Ç—É —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç\n"
    f"‚ÄÄ‚ÄÄ‚îî üí° –ë–ª–æ–∫–∏ –±–µ–∑ –§–ò–û –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è\n"
    f"‚ÄÄ‚ÄÄ‚îî üí° –ò–º–µ–Ω–∞ –±–æ–ª—å—à–µ {zoom.NAME_LIMIT} —Å–∏–º–≤–æ–ª–æ–≤ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è"
)
def format_doesnt_contain_zoom():
    return MSG_DOESNT_CONTAIN_ZOOM


MSG_TCHR_DOESNT_CONTAIN_ZOOM = (
    f"‚ùå | –ü–æ —Ñ–æ—Ä–º–∞—Ç—É —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç\n"
    f"‚ÄÄ‚ÄÄ‚îî üí° –ë–ª–æ–∫–∏ –±–µ–∑ –∏–º—ë–Ω –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è\n"
    f"‚ÄÄ‚ÄÄ‚îî üí° –ò–º–µ–Ω–∞ –±–æ–ª—å—à–µ {zoom.NAME_LIMIT} —Å–∏–º–≤–æ–ª–æ–≤ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è"
)
def format_tchr_doesnt_contain_zoom():
    return MSG_TCHR_DOESNT_CONTAIN_ZOOM


MSG_YOU_CAN_ADD_MORE = (
    "ü§ì | –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ, "
    "–ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ—â—ë –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏"
)
def format_you_can_add_more():
    return MSG_YOU_CAN_ADD_MORE


MSG_VALUE_TOO_BIG = (
    "‚ùå | –°–æ–∫—Ä–∞—Ç–∏ –¥–æ {limit} —Å–∏–º–≤–æ–ª–æ–≤"
)
def format_value_too_big(limit: int):
    return MSG_VALUE_TOO_BIG.format(limit=limit)


MSG_ENTER_NAME = (
    "üê∑ | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ –∏–º—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>–ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.–î.</code>, <code>–ì–æ–≤–Ω–æ–≤–æ–∑ –ñ.</code>"
)
def format_enter_name(do_markup: bool = True):
    text = MSG_ENTER_NAME
    
    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_TCHR_ENTER_NAME = (
    "üê∑ | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ –∏–º—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>–î–ª—è 1–ö–î–î69</code>, <code>–î–æ–ø. –∑–∞–Ω—è—Ç–∏—è</code>"
)
def format_tchr_enter_name(do_markup: bool = True):
    text = MSG_TCHR_ENTER_NAME
    
    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_NAME_IN_DATABASE = (
    "‚ùå | –≠—Ç–æ –∏–º—è —É–∂–µ –≤ –±–∞–∑–µ"
)
def format_name_in_database():
    return MSG_NAME_IN_DATABASE


MSG_ENTER_URL = (
    "üåê | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>https://us04web.zoom.us/j/2281337300?pwd=I4mTir3d0fPl4yingWithMyW00d</code>"
)
def format_enter_url(do_markup: bool = True):
    text = MSG_ENTER_URL
    
    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_ENTER_ID = (
    "üìç | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π ID –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>2281337300</code>"
)
def format_enter_id(do_markup: bool = True):
    text = MSG_ENTER_ID

    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_ENTER_PWD = (
    "üîë | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>0oChKo</code> –∏–ª–∏ –¥—Ä."
)
def format_enter_pwd(do_markup: bool = True):
    text = MSG_ENTER_PWD

    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_ENTER_HOST_KEY = (
    "üîí | –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π –∫–ª—é—á —Ö–æ—Å—Ç–∞ –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>mRp3ni5</code> –∏–ª–∏ –¥—Ä."
)
def format_enter_host_key(do_markup: bool = True):
    text = MSG_ENTER_HOST_KEY

    if not do_markup:
        return tg.remove_markup(text)
    
    return text


MSG_ENTER_NOTES = (
    "üìù | –û—Ç–ø—Ä–∞–≤—å –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏\n"
    "‚ÄÄ‚ÄÄ‚îî üëâ –ù–∞–ø—Ä–∏–º–µ—Ä: –ø–æ—á—Ç–∞ –∏ Google Drive"
)
def format_enter_notes():
    return MSG_ENTER_NOTES


MSG_TCHR_ENTER_NOTES = (
    "üìù | –û—Ç–ø—Ä–∞–≤—å –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏"
)
def format_thcr_enter_notes():
    return MSG_TCHR_ENTER_NOTES


MSG_WILL_BE_ADDED = (
    "‚ùá –ë—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ: {count}"
)
def format_will_be_added(count: int):
    return MSG_WILL_BE_ADDED.format(
        count = count,
    )


MSG_WILL_BE_OVERWRITTEN = (
    "‚ôª –ë—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ: {count}"
)
def format_will_be_overwritten(count: int):
    return MSG_WILL_BE_OVERWRITTEN.format(
        count = count,
    )


def format_zoom_mass_adding_overview(
    adding: zoom.Entries,
    overwriting: zoom.Entries,
    mode: "MODE_LITERAL"
):
    sections: list[str] = []

    if len(adding) > 0:
        entries = common.text.indent(adding.format_compact(mode))
        text = format_will_be_added(len(adding))
        text += "\n"
        text += entries

        sections.append(text)

    if len(overwriting) > 0:
        entries = common.text.indent(overwriting.format_compact(mode))
        text = format_will_be_overwritten(len(overwriting))
        text += "\n"
        text += entries

        sections.append(text)

    return "\n".join(sections)


MSG_DUMP_EXPLAIN = (
    f"üíæ | –¢—ã –º–æ–∂–µ—à—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å "
    f"–≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–¥–µ—Å—å –∑–∞–ø–∏—Å–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥ "
    f"–∏ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ –¥—Ä—É–≥–æ–º –¥–∏–∞–ª–æ–≥–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é {Text.FROM_TEXT}\n\n"
    f"üí° | –ï—Å–ª–∏ –∑–∞–ø–∏—Å–µ–π —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, "
    f"–æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\n\n"
    f"üëá | –ù–∞–∂–∏–º–∞–π {Text.DUMP} —á—Ç–æ–±—ã –∑–∞—Å—Ä–∞—Ç—å –±–µ—Å–µ–¥—É"
)
def format_dump_explain():
    return MSG_DUMP_EXPLAIN


MSG_REMOVE_CONFIRMATION = (
    "üóëÔ∏è | –¢–æ—á–Ω–æ {removal_type} –≤—Å–µ –∑–∞–ø–∏—Å–∏?"
)
def format_remove_confirmation(removal_type: str):
    return MSG_REMOVE_CONFIRMATION.format(removal_type=removal_type)


MSG_YOU_CAN_DUMP_ENTRIES_BEFORE_REMOVAL = (
    "üíæ | –¢—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –¥–∞–º–ø "
    "–ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∏—Ö"
)
def format_you_can_dump_entries_before_removal():
    return MSG_YOU_CAN_DUMP_ENTRIES_BEFORE_REMOVAL


MSG_FINISH = (
    f"üëç | –ì–æ—Ç–æ–≤–æ, –º–æ–∂–µ—à—å –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å "
    f"–∏–ª–∏ –Ω–∞–∂–∞—Ç—å {Text.FINISH}"
)
def format_finish():
    return MSG_FINISH


MSG_GROUP_SETTING_EXPLAIN = (
    f"{Text.GROUP}: ""{group}\n"
    f"‚îî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã, —Å –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–≥—Ä"
)
MSG_TEACHER_SETTING_EXPLAIN = (
    f"{Text.TEACHER}: ""{teacher}\n"
    f"‚îî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–ø–æ–¥–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–≥—Ä"
)
MSG_BROADCAST_SETTING_EXPLAIN = (
    f"{Text.BROADCAST}: ""{broadcast}\n"
    f"‚îî –ü–æ–ª—É—á–∏—à—å –ª–∏ —Ç—ã –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "
    f"–ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã"
)
MSG_TCHR_BROADCAST_SETTING_EXPLAIN = (
    f"{Text.BROADCAST}: ""{broadcast}\n"
    f"‚îî –ü–æ–ª—É—á–∏—à—å –ª–∏ —Ç—ã –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "
    f"–ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞"
)
MSG_PIN_SETTING_EXPLAIN = (
    f"{Text.PIN}: ""{do_pin}\n"
    f"‚îî –ó–∞–∫—Ä–µ–ø–∏—Ç –ª–∏ –Ω–µ–≥—Ä —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
)
MSG_ZOOM_SETTING_EXPLAIN = (
    f"{Text.ZOOM}: ""{zoom}\n"
    f"‚îî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–æ–≤: "
    f"–∏—Ö –∏–º–µ–Ω–∞, —Å—Å—ã–ª–∫–∏, ID, –ø–∞—Ä–æ–ª–∏ –∏ –∑–∞–º–µ—Ç–∫–∏, "
    f"–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
MSG_TCHR_ZOOM_SETTING_EXPLAIN = (
    f"{Text.ZOOM}: ""{zoom}\n"
    f"‚îî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞–Ω–Ω—ã—Ö Zoom: "
    f"—Å—Å—ã–ª–∫–∏, ID, –ø–∞—Ä–æ–ª–∏ –∏ –∑–∞–º–µ—Ç–∫–∏, "
    f"–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
MSG_RESET_SETTING_EXPLAIN = (
    f"{Text.RESET}\n"
    f"‚îî –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ "
    f"–∏ –Ω–∞—á–∞—Ç—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
)
def format_settings_main(
    is_group_chat: bool,
    group: str,
    broadcast: bool,
    do_pin: bool,
    zoom: int
) -> str:
    text = ""

    text += MSG_GROUP_SETTING_EXPLAIN.format(
        group=fmt.value_repr(group)
    ) + "\n"
    text += "\n"
    text += MSG_BROADCAST_SETTING_EXPLAIN.format(
        broadcast=fmt.value_repr(broadcast)
    ) + "\n"
    text += "\n"
    if is_group_chat:
        text += MSG_PIN_SETTING_EXPLAIN.format(
            do_pin=fmt.value_repr(do_pin)
        ) + "\n"
        text += "\n"
    text += MSG_ZOOM_SETTING_EXPLAIN.format(
        zoom=fmt.value_repr(zoom)
    ) + "\n"
    text += "\n"
    text += MSG_RESET_SETTING_EXPLAIN + "\n"

    return text

def format_tchr_settings_main(
    is_group_chat: bool,
    teacher: str,
    broadcast: bool,
    do_pin: bool,
    zoom: int
) -> str:
    text = ""

    text += MSG_TEACHER_SETTING_EXPLAIN.format(
        teacher=fmt.value_repr(teacher)
    ) + "\n"
    text += "\n"
    text += MSG_TCHR_BROADCAST_SETTING_EXPLAIN.format(
        broadcast=fmt.value_repr(broadcast)
    ) + "\n"
    text += "\n"
    if is_group_chat:
        text += MSG_PIN_SETTING_EXPLAIN.format(
            do_pin=fmt.value_repr(do_pin)
        ) + "\n"
        text += "\n"
    text += MSG_TCHR_ZOOM_SETTING_EXPLAIN.format(
        zoom=fmt.value_repr(zoom)
    ) + "\n"
    text += "\n"
    text += MSG_RESET_SETTING_EXPLAIN + "\n"

    return text


MSG_RESET_EXPLAIN = (
    f"üóëÔ∏è | –≠—Ç–æ —Å–±—Ä–æ—Å–∏—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ + Zoom –¥–∞–Ω–Ω—ã–µ "
    f"–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É\n\n"
    f"üëá | –ù–∞–∂–∏–º–∞–π {Text.RESET} –µ—Å–ª–∏ —Ç–æ–∂–µ —Ö–æ—á–µ—à—å "
    f"–±–æ–ª–µ–∑–Ω—å –ê–ª—å—Ü–≥–µ–π–º–µ—Ä–∞"
)
def format_reset_explain() -> str:
    return MSG_RESET_EXPLAIN


MSG_LOGS_EMPTY = (
    "<Empty logs>"
)
def format_logs_empty(do_escape: bool = False) -> str:
    text = MSG_LOGS_EMPTY
    if do_escape:
        return html.escape(text)

    return text


MSG_EXECUTION_ERROR = (
    "‚ùå Error: {error}"
)
def format_execution_error(
    error: str,
    traceback: Optional[str] = None
) -> str:
    exec_error_message = MSG_EXECUTION_ERROR
    if traceback is not None:
        exec_error_message += "\n\n"
        exec_error_message += traceback

    return exec_error_message.format(error=error)


MSG_EXECUTE_CODE_EXPLAIN = (
    "üõ†Ô∏è | –ù–∞–ø–∏—à–∏ –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–∞–Ω—Ç–∞–π–º–µ\n\n"
    "–î–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {print_example}\n\n"
    "–ü–æ–ª–µ–∑–Ω—ã–µ –ø—É—Ç–∏:\n"
    "src.defs (defs -> (redis, ctx -> get_everyone))\n"
    "src.svc.common.keyboard (Keyboard, *_BUTTON)\n"
    "src.svc.common.states.tree (HUB, SETTINGS, ...)"
)
def format_execute_code_explain(
    exposed_vars: list[str],
    print_example: str
) -> str:
    return MSG_EXECUTE_CODE_EXPLAIN.format(
        exposed_vars=", ".join(exposed_vars),
        print_example=print_example
    )


MSG_NO_RIGHTS = (
    "–¢–µ–±–µ —ç—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
)
def format_no_rights() -> str:
    return MSG_NO_RIGHTS


MSG_NO_SCHEDULE = (
    "ü§î –ì—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
def format_no_schedule() -> str:
    return MSG_NO_SCHEDULE


MSG_TCHR_NO_SCHEDULE = (
    "ü§î –ü—Ä–µ–ø–æ–¥–∞ –Ω–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
def format_tchr_no_schedule() -> str:
    return MSG_TCHR_NO_SCHEDULE


MSG_SCHEDULE_FOOTER = (
    "‚è± –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {last_update}\n"
    "‚úâ –ü–µ—Ä–∏–æ–¥ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_period}"
)
def format_schedule_footer(last_update: Any, update_period: Any) -> str:
    return MSG_SCHEDULE_FOOTER.format(
        last_update=last_update if last_update else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        update_period=f"{update_period} –º–∏–Ω" if update_period else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    )


MSG_MANUAL_UPDATES_ARE_DISABLED = (
    "‚ùå –†—É—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
)
def format_manual_updates_are_disabled():
    return MSG_MANUAL_UPDATES_ARE_DISABLED


MSG_NOT_IMPLEMENTED_ERROR = (
    "ü§î –§—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞"
)
def format_not_implemented_error() -> str:
    return MSG_NOT_IMPLEMENTED_ERROR


MSG_GROUP_CHANGED_IN_SCHEDULE = (
    "üß≠ –ì—Ä—É–ø–ø–∞ {change} –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
def format_group_changed_in_schedule(change: compare.ChangeType):
    if change == compare.ChangeType.APPEARED:
        repr_change = "–ø–æ—è–≤–∏–ª–∞—Å—å"
    elif change == compare.ChangeType.CHANGED:
        repr_change = "–∏–∑–º–µ–Ω–∏–ª–∞—Å—å"

    return MSG_GROUP_CHANGED_IN_SCHEDULE.format(
        change=repr_change
    )


MSG_TEACHER_CHANGED_IN_SCHEDULE = (
    "üß≠ –ü—Ä–µ–ø–æ–¥ {change} –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
)
def format_teacher_changed_in_schedule(change: compare.ChangeType):
    if change == compare.ChangeType.APPEARED:
        repr_change = "–ø–æ—è–≤–∏–ª—Å—è"
    elif change == compare.ChangeType.CHANGED:
        repr_change = "–∏–∑–º–µ–Ω–∏–ª—Å—è"

    return MSG_TEACHER_CHANGED_IN_SCHEDULE.format(
        change=repr_change
    )


MSG_REPLIED_TO_SCHEDULE_MESSAGE = (
    "üëÜ –ü—Ä–æ—à–ª–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"
)
def format_replied_to_schedule_message():
    return MSG_REPLIED_TO_SCHEDULE_MESSAGE


MSG_DETAILED_COMPARE_NOT_SHOWN = (
    "(–¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –ø–æ–∫–∞–∑–∞–Ω—ã)"
)
def format_detailed_compare_not_shown():
    return MSG_DETAILED_COMPARE_NOT_SHOWN
